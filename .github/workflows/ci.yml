# The name of the workflow
name: build

# What conditions trigger the workflow
#  In this case, all pushes and pull requests
on: [push, pull_request]

# The jobs that will be run, usually in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Send a build notification email
    - name: Send email
      uses: dawidd6/action-send-mail@v2.2.0
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{secrets.MAIL_USERNAME}}
        password: ${{secrets.MAIL_PASSWORD}}
        subject: Github Actions build result
        body: Build job of ${{github.repository}} completed!
        to: ${{secrets.BUILD_NOTICE_RECIPIENTS}}
        from: Neighborhood Chef <${{secrets.MAIL_USERNAME}}>
        # Optional content type (defaults to text/plain):
        content_type: text/html

  # A job to generate and publish code coverage
  coverage:
    # A more descriptive name of the job
    name: Test and publish test coverage
    # The OS on which the job will run
    runs-on: ubuntu-latest
    # The steps for the job, executed in sequence
    steps:
      # A GitHub action for checking out the current branch
      - uses: actions/checkout@master
      # A GitHub action to setup Node.js
      - uses: actions/setup-node@master
        with:
          node-version: "12"
      # Run the NPM install command before proceeding
      - run: npm install
      # A GitHub action for running tests and publishing coverage
      - uses: paambaati/codeclimate-action@v2.4.0
        env:
          # An environment variable, the value is a GitHub repo secret
          CC_TEST_REPORTER_ID: ${{ secrets.CodeClimateReporterId }}

        with:
          # Run our `coverage` script in our `package.json`
          coverageCommand: npm run coverage
          # By default, this looks for a `coverage` folder in the root of your project, but you may need to change this
          debug: true
